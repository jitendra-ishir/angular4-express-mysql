"use strict";
/**
 * Created by laurence-ho on 22/07/17.
 */
var express = require("express");
var router = express.Router();
var db = require('../database/db.service');
var authentication = require('../authentication');
// get one comment for edit
router.get('/comment/:comment_id/edit', authentication.checkCommentOwner, function (req, res) {
    db.getConnection(function (err, connection) {
        if (err) {
            res.status(500).send({ message: err });
        }
        else {
            connection.query('SELECT * FROM comments WHERE id = ?', [req.params.comment_id], function (err, result) {
                connection.release();
                if (err) {
                    res.status(500).send({ message: err });
                }
                else {
                    res.status(200).send({ comment: result[0] });
                }
            });
        }
    });
});
// create a new comment by campground id
router.post('/comment', authentication.isLoggedIn, function (req, res) {
    req.body.text = req.sanitize(req.body.text);
    db.getConnection(function (err, connection) {
        if (err) {
            res.status(500).send({ message: err });
        }
        else {
            connection.query('INSERT INTO comments SET ?', req.body, function (err, result) {
                connection.release();
                if (err) {
                    res.status(500).send({ message: err });
                }
                else {
                    res.status(200).send({ comment_id: result.insertId });
                }
            });
        }
    });
});
// edit one comment by comment id
router.put('/comment/:comment_id/edit', authentication.checkCommentOwner, function (req, res) {
    req.body.text = req.sanitize(req.body.text);
    db.getConnection(function (err, connection) {
        if (err) {
            res.status(500).send({ message: err });
        }
        else {
            connection.query('UPDATE comments SET ? WHERE id = ?', [req.body, req.params.comment_id], function (err) {
                connection.release();
                if (err) {
                    res.status(500).send({ message: err });
                }
                else {
                    res.status(200).send({ comment_id: req.params.comment_id });
                }
            });
        }
    });
});
// delete one comment
router.delete('/comment/:comment_id', authentication.checkCommentOwner, function (req, res) {
    db.getConnection(function (err, connection) {
        if (err) {
            res.status(500).send({ message: err });
        }
        else {
            connection.query('DELETE FROM comments WHERE id = ?', [req.params.comment_id], function (err) {
                connection.release();
                if (err) {
                    res.status(500).send({ message: err });
                }
                else {
                    res.status(200).send({ comment_id: req.params.comment_id });
                }
            });
        }
    });
});
module.exports = router;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
