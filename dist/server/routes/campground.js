"use strict";
/**
 * Created by laurence-ho on 21/07/17.
 */
var express = require("express");
var router = express.Router();
var db = require('../database/db.service');
var authentication = require('../authentication');
// get all campgrounds
router.get('/campground', function (req, res) {
    db.getConnection(function (err, connection) {
        if (err) {
            res.status(500).send({ message: err });
        }
        else {
            connection.query('SELECT * FROM campgrounds', function (err, results) {
                connection.release();
                if (err) {
                    res.status(500).send({ message: err });
                }
                else {
                    res.send(results);
                }
            });
        }
    });
});
// create one campground
router.post('/campground', authentication.isLoggedIn, function (req, res) {
    req.body.name = req.sanitize(req.body.name);
    req.body.image = req.sanitize(req.body.image);
    req.body.description = req.sanitize(req.body.description);
    req.body.price = req.sanitize(req.body.price);
    db.getConnection(function (err, connection) {
        if (err) {
            res.status(500).send({ message: err });
        }
        else {
            connection.query('INSERT INTO campgrounds SET ?', req.body, function (err, result) {
                connection.release();
                if (err) {
                    res.status(500).send({ message: err });
                }
                else {
                    res.status(200).send({ campground_id: result.insertId });
                }
            });
        }
    });
});
// get one campground with comments
router.get('/campground/:id', function (req, res) {
    var campground = [], comments = [];
    db.getConnection(function (err, connection) {
        if (err) {
            res.status(500).send({ message: err });
        }
        else {
            connection.query('SELECT * FROM campgrounds WHERE id = ?', [req.params.id], function (err, result) {
                if (err) {
                    res.status(500).send({ message: err });
                }
                else {
                    campground = result[0];
                }
            });
            connection.query('SELECT * FROM comments WHERE campground_id = ?', [req.params.id], function (err, result) {
                connection.release();
                if (err) {
                    res.status(500).send({ message: err });
                }
                else {
                    comments = result;
                    res.status(200).send({ campground: campground, comments: comments });
                }
            });
        }
    });
});
// get campground without comment for edit
router.get('/campground/:id/edit', authentication.checkCampOwner, function (req, res) {
    db.getConnection(function (err, connection) {
        if (err) {
            res.status(500).send({ message: err });
        }
        else {
            connection.query('SELECT * FROM campgrounds WHERE id = ?', [req.params.id], function (err, result) {
                connection.release();
                if (err) {
                    res.status(500).send({ message: err });
                }
                else {
                    res.status(200).send({ campground: result[0] });
                }
            });
        }
    });
});
// edit one campground
router.put('/campground/:id/edit', authentication.checkCampOwner, function (req, res) {
    req.body.name = req.sanitize(req.body.name);
    req.body.image = req.sanitize(req.body.image);
    req.body.description = req.sanitize(req.body.description);
    req.body.price = req.sanitize(req.body.price);
    db.getConnection(function (err, connection) {
        if (err) {
            res.status(500).send({ message: err });
        }
        else {
            connection.query('UPDATE campgrounds SET ? WHERE id = ?', [req.body, req.params.id], function (err) {
                connection.release();
                if (err) {
                    res.status(500).send({ message: err });
                }
                else {
                    res.status(200).send({ campground_id: req.params.id });
                }
            });
        }
    });
});
// delete one campground
router.delete('/campground/:id', authentication.checkCampOwner, function (req, res) {
    db.getConnection(function (err, connection) {
        if (err) {
            res.status(500).send({ message: err });
        }
        else {
            connection.query('DELETE FROM campgrounds WHERE id = ?', [req.params.id], function (err) {
                connection.release();
                if (err) {
                    res.status(500).send({ message: err });
                }
                else {
                    res.status(200).send({ campground_id: req.params.id });
                }
            });
        }
    });
});
module.exports = router;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
